(function() {
  var t;
  (t = {}), (t = (function() {
    function t(t) {
      var e, i;
      t &&
        (
          (this.awayTimeout = parseInt(t.awayTimeout, 10)),
          (this.onAway = t.onAway),
          (this.onAwayBack = t.onAwayBack),
          (this.onVisible = t.onVisible),
          (this.onHidden = t.onHidden)
        ), (i = this), (e = function() {
        return i.onActive();
      }), (window.onclick = e), (window.onmousemove = e), (window.onmouseenter = e), (window.onkeydown = e), (window.onscroll = e), this.startAwayTimeout(), document.addEventListener(
        "visibilitychange",
        function() {
          return i.handleVisibilityChange();
        },
        !1
      ), document.addEventListener(
        "webkitvisibilitychange",
        function() {
          return i.handleVisibilityChange();
        },
        !1
      ), document.addEventListener(
        "msvisibilitychange",
        function() {
          return i.handleVisibilityChange();
        },
        !1
      );
    }
    return (t.isAway = !1), (t.awayTimeout = 3e3), (t.awayTimestamp = 0), (t.awayTimer = null), (t.onAway = null), (t.onAwayBack = null), (t.onVisible = null), (t.onHidden = null), (t.prototype.onActive = function() {
      return (this.awayTimestamp =
        new Date().getTime() + this.awayTimeout), this.isAway &&
        (
          this.onAwayBack && this.onAwayBack(),
          this.startAwayTimeout()
        ), (this.isAway = !1), !0;
    }), (t.prototype.startAwayTimeout = function() {
      var t;
      return (this.awayTimestamp =
        new Date().getTime() + this.awayTimeout), null !== this.awayTimer &&
        clearTimeout(
          this.awayTimer
        ), (t = this), (this.awayTimer = setTimeout(function() {
        return t.checkAway();
      }, this.awayTimeout + 100));
    }), (t.prototype.setAwayTimeout = function(t) {
      return (this.awayTimeout = parseInt(t, 10)), this.startAwayTimeout();
    }), (t.prototype.checkAway = function() {
      var t, e;
      return (e = new Date().getTime()) < this.awayTimestamp
        ? (
            (this.isAway = !1),
            (t = this),
            void (this.awayTimer = setTimeout(function() {
              return t.checkAway();
            }, this.awayTimestamp - e + 100))
          )
        : (
            null !== this.awayTimer && clearTimeout(this.awayTimer),
            (this.isAway = !0),
            this.onAway ? this.onAway() : void 0
          );
    }), (t.prototype.handleVisibilityChange = function() {
      if (document.hidden || document.msHidden || document.webkitHidden) {
        if (this.onHidden) return this.onHidden();
      } else if (this.onVisible) return this.onVisible();
    }), t;
  })()), (window.Idle = t);
}.call(this), (function(t) {
  function e(t, e) {
    if (!t) throw new Error("Missing selector. Refer to quadrupletech.com");
    for (var i = 0; i < a.length; i++)
      if (a[i] === t)
        throw new Error(
          "An instance of Quadruple with this selector already exists."
        );
    if (
      (
        (this.options = {
          buttonPreviousClass: "Quadruple-buttonPrevious",
          buttonNextClass: "Quadruple-buttonNext",
          itemClass: "Quadruple-item",
          currentItemClass: "Quadruple-item--current",
          showPreviousClass: "Quadruple-item--showPrevious",
          showNextClass: "Quadruple-item--showNext",
          hidePreviousClass: "Quadruple-item--hidePrevious",
          hideNextClass: "Quadruple-item--hideNext",
          carousel: !0
        }),
        (this.whitelist = { form: !0 }),
        t.length > 0 && !this.whitelist[t]
      )
    )
      throw new Error(
        "Selector cannot be an array, Refer to Usage documentation: https://github.com/peduarte/Quadruple#javascript"
      );
    (this.$selector = t), (this.options = o(
      this.options,
      e
    )), (this.event = null), this.reset(), (this.buttonPrevious = this.$selector.querySelector(
      " ." + this.options.buttonPreviousClass
    )), (this.buttonNext = this.$selector.querySelector(
      " ." + this.options.buttonNextClass
    )), this.bindEvents(), this.createCustomEvent(), -1 ===
      this.currentItemIndex &&
      (
        (this.currentItemIndex = 0),
        n(
          this.allItemsArray[this.currentItemIndex],
          this.options.currentItemClass
        )
      ), this.updateButtonStates();
    var s = this;
    setTimeout(function() {
      (s.event.detail.currentItemIndex =
        s.currentItemIndex), s.$selector.dispatchEvent(s.event);
    }, 0);
  }
  function i(t, e) {
    if (t) return e || (e = document), e.querySelector("." + t);
  }
  function n(t, e) {
    t && (t.className = (t.className + " " + e).trim());
  }
  function s(t, e) {
    t && (t.className = t.className.replace(e, "").trim());
  }
  function o(t, e) {
    var i,
      n = {};
    for (i in t) n[i] = t[i];
    for (i in e) n[i] = e[i];
    return n;
  }
  function r(t, e) {
    e = e || { bubbles: !1, cancelable: !1, detail: void 0 };
    var i = document.createEvent("CustomEvent");
    return i.initCustomEvent(t, e.bubbles, e.cancelable, e.detail), i;
  }
  var a = [],
    u = e.prototype;
  (u.updateButtonStates = function() {
    (!this.buttonPrevious && !this.buttonNext) ||
      this.options.carousel ||
      (this.currentItemIndex === this.lastItemIndex
        ? this.buttonNext.setAttribute("disabled", "disabled")
        : 0 === this.currentItemIndex &&
          this.buttonPrevious.setAttribute("disabled", "disabled"));
  }), (u.removeAllHelperSettings = function() {
    s(
      this.allItemsArray[this.currentItemIndex],
      this.options.currentItemClass
    ), s(
      i(this.options.hidePreviousClass, this.$selector),
      this.options.hidePreviousClass
    ), s(
      i(this.options.hideNextClass, this.$selector),
      this.options.hideNextClass
    ), s(
      i(this.options.showPreviousClass, this.$selector),
      this.options.showPreviousClass
    ), s(
      i(this.options.showNextClass, this.$selector),
      this.options.showNextClass
    ), (this.buttonPrevious || this.buttonNext) &&
      (
        this.buttonPrevious.removeAttribute("disabled"),
        this.buttonNext.removeAttribute("disabled")
      );
  }), (u.goTo = function(t) {
    if (
      t !== this.currentItemIndex &&
      (
        (t = -1 === t && this.options.carousel ? this.lastItemIndex : t),
        !(
          (t = t === this.lastItemIndex + 1 && this.options.carousel ? 0 : t) <
            0 || t > this.lastItemIndex
        )
      )
    ) {
      this.removeAllHelperSettings();
      var e =
        (t > this.currentItemIndex ||
          (0 === t && this.currentItemIndex === this.lastItemIndex)) &&
        !(t === this.lastItemIndex && 0 === this.currentItemIndex);
      n(
        this.allItemsArray[this.currentItemIndex],
        e ? this.options.hidePreviousClass : this.options.hideNextClass
      ), n(
        this.allItemsArray[t],
        this.options.currentItemClass +
          " " +
          (e ? this.options.showNextClass : this.options.showPreviousClass)
      ), (this.currentItemIndex = t), this.updateButtonStates(), (this.event.detail.currentItemIndex = this.currentItemIndex), this.$selector.dispatchEvent(
        this.event
      );
    }
  }), (u.previous = function() {
    this.goTo(this.currentItemIndex - 1);
  }), (u.next = function() {
    this.goTo(this.currentItemIndex + 1);
  }), (u.reset = function() {
    (this.allItemsArray = Array.prototype.slice.call(
      this.$selector.querySelectorAll(" ." + this.options.itemClass)
    )), (this.currentItemIndex = this.allItemsArray.indexOf(
      this.$selector.querySelector(" ." + this.options.currentItemClass)
    )), (this.lastItemIndex = this.allItemsArray.length - 1);
  }), (u.bindEvents = function() {
    a.push(this.$selector);
    var t = this;
    this.buttonPrevious &&
      this.buttonPrevious.addEventListener("click", function(e) {
        e.preventDefault(), t.previous();
      }), this.buttonNext &&
      this.buttonNext.addEventListener("click", function(e) {
        e.preventDefault(), t.next();
      });
  }), (u.on = function(t, e) {
    this.$selector.addEventListener(t, e, !1);
  }), (u.off = function(t, e) {
    this.$selector.removeEventListener(t, e, !1);
  }), (u.createCustomEvent = function() {
    var t = this;
    this.event = new r("change", {
      detail: {
        quadrupleEl: t.$selector,
        currentItemIndex: Number(t.currentItemIndex)
      },
      bubbles: !0,
      cancelable: !0
    });
  }), (r.prototype = window.CustomEvent
    ? window.CustomEvent.prototype
    : {}), (window.CustomEvent = r), "function" == typeof define && define.amd
    ? define(function() {
        return e;
      })
    : "undefined" != typeof module && module.exports
      ? (module.exports = e)
      : (t.Quadruple = e);
})(this), (function() {
  "use strict";
  function t(t) {
    function e(t, e, i) {
      var n = document.createElement("img");
      return (n.src = t), e && (n.alt = e), i && (n.title = i), n;
    }
    return (function(t) {
      var i = document.createElement("div");
      i.setAttribute("class", "Quadruple-list");
      for (var n = 0; n < t.length; n++) {
        var s = document.createElement("div");
        s.setAttribute("class", "Quadruple-item"), s.appendChild(
          e(t[n].url)
        ), i.appendChild(s);
      }
      return i;
    })(t);
  }
  function e(t, e) {
    function i(s) {
      s - n >= t && (e(), (n = s)), requestAnimationFrame(i);
    }
    var n = 0;
    requestAnimationFrame(i);
  }
  function i() {
    if (l.isAdShowing && !l.userIdle && !l.wasAdSent) {
      var t = new XMLHttpRequest(),
        e = Object.assign({}, l, {
          timeInSeconds: new Date() - l.startTime,
          isUnique: -1 === l.adsShown.indexOf(l.adID) ? 1 : 0
        });
      delete e.isAdShowing, delete e.userIdle, delete e.wasAdSent, delete e.startTime, delete e.adsShown;
      var i = JSON.stringify(e);
      t.open(
        "POST",
        "http://52.32.74.125/dashboard-htc/data-receiver.php",
        !0
      ), console.log(e), t.setRequestHeader(
        "Content-type",
        "application/json;charset=UTF-8"
      ), (t.onreadystatechange = function() {
        4 == t.readyState &&
          200 == t.status &&
          (
            (l.wasAdSent = !0),
            -1 === l.adsShown.indexOf(l.adID) && l.adsShown.push(l.adID),
            console.log(t.responseText)
          );
      }), t.send(i);
    }
  }
  var n,
    s = [
      { id: 1, url: "http://52.25.120.1/images/1ad.jpg" },
      { id: 2, url: "http://52.25.120.1/images/2ad.png" },
      { id: 3, url: "http://52.25.120.1/images/3ad.jpg" },
      { id: 4, url: "http://52.25.120.1/images/4asd.jpg" }
    ],
    o = 5e3,
    r = 1e3,
    a = 20,
    u = "ads_coming_here",
    l = {
      isAdShowing: null,
      adID: 0,
      userIdle: !1,
      wasAdSent: !1,
      userID: Math.floor(1e5 * Math.random()),
      publisherID: 1,
      currentIteration: 0,
      startTime: null,
      adsShown: []
    };
  !(function() {
    function d() {
      var t = [window.pageYOffset, window.innerHeight + window.pageYOffset],
        e = document.getElementById("ads_coming_here"),
        i = [e.offsetTop, e.offsetTop + e.clientHeight],
        n = [Math.max(t[0], i[0]), Math.min(t[1], i[1])];
      return (n[1] - n[0]) / (i[1] - i[0]) * 100;
    }
    var h = document.getElementById(u);
    h.setAttribute("class", "Quadruple"), h.appendChild(
      t(s)
    ), (l.startTime = new Date()), (function() {
      function t() {
        n.next();
      }
      function r(t) {
        0 === t.detail.currentItemIndex &&
          l.currentIteration++, (l.wasAdSent = !1), (l.adID =
          s[t.detail.currentItemIndex].id), i();
      }
      (n = new Quadruple(h)), e(o, t), n.on("change", r);
    })(), (function() {
      var t = function() {
          l.userIdle = !0;
        },
        e = function() {
          (l.userIdle = !1), i();
        },
        n = function() {
          l.userIdle = !0;
        },
        s = function() {
          (l.userIdle = !1), i();
        };
      new Idle({
        onHidden: n,
        onVisible: s,
        onAway: t,
        onAwayBack: e,
        awayTimeout: r
      });
    })(), window.addEventListener("scroll", function(t) {
      l && (l.isAdShowing = d() > a);
    }), (l.isAdShowing = d() > a);
  })();
})());
